/*1. С помощью цикла while вывести все простые числа в промежутке от 0 до 100. 
2 	3 	5 	7 	11 	13 	17 	19 	23 	29 	31 	37 	41 	43 	47 	53 	59 	61 	67 	71  73 	79 	83 	89 	97

Очень не нравится такое решение, лучше не придумал. Всё пытался одним while обойтись, но не получилось. Очень буду признателен если покажите, как сделать красиво.*/

function firsttask() {
    var num = 2;

    while (num <= 100) {
        var result = 0;
        for (var i = 2; i < num; i++) {
            if (num % i == 0) {
                result = 1;
            }
        }
        if (result == 0) {
            alert(num)
        }
        num++;
    }
}

/*2. С этого урока начинаем работать с функционалом интернет-магазина. Предположим, есть сущность корзины. Нужно реализовать функционал подсчета стоимости корзины в зависимости от находящихся в ней товаров. Товары в корзине хранятся в массиве. Задачи:

a) Организовать такой массив для хранения товаров в корзине;
b) Организовать функцию countBasketPrice, которая будет считать стоимость корзины. */

function secondtask() {
    var cart = [
        ["Ноутбук Супер мощный", 100000],
        ["Роутер Супер мощный", 200000],
    ];
    var amout = 0;

    function countCartPrice() {
        for (var i = 0; i < cart.length; i++) {
            product = cart[i];
            amout += product[1];
        }
        return "Общая сумма товаров в корзине: " + amout + " рублей";
    }
    alert(countCartPrice())
}

/*3. *Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла. Выглядеть это должно так:

for(…){// здесь пусто} */

function thirdtask() {
    for (var i = 0; i <= 9; alert(i++));
}

/*4. *Нарисовать пирамиду с помощью console.log, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:

x
xx
xxx
xxxx
xxxxx */

function fourthtask() {
    var line = "X";
    for (var i = 0; i < 20; i++) {
        console.log(line);
        line += "X"
    }
}