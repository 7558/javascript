/*1. Написать функцию, преобразующую число в объект. Передавая на вход число от 0 до 999, мы должны получить на выходе объект, в котором в соответствующих свойствах описаны единицы, десятки и сотни. Например, для числа 245 мы должны получить следующий объект: {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}. Если число превышает 999, необходимо выдать соответствующее сообщение с помощью console.log и вернуть пустой объект. */

function lessonOne(inputUser) {
    var result = {};
    var result1 = {};
    var result2 = {};
    var result3 = {};
    if (inputUser.length === 3) {
        result3.единицы = inputUser[2];
        result3.десятки = inputUser[1];
        result3.сотни = inputUser[0];
        console.log(result3);
    } else if (inputUser.length === 2) {
        result2.единицы = inputUser[1];
        result2.десятки = inputUser[0];
        console.log(result2);
    } else if (inputUser.length === 1) {
        result1.единицы = inputUser[0];
        console.log(result1);
    } else {
        alert("Число больше 999");
        console.log(result);
    }

}

lessonOne(prompt("Введите число до 999: "));

/*2. Продолжить работу с интернет-магазином:

В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
Реализуйте такие объекты.
Перенести функционал подсчета корзины на объектно-ориентированную базу. */

function secondtask() {
    var cart1 = {
        name: "Ноутбук",
        count: 8000
    };
    var cart2 = {
        name: "Телефон",
        count: 5000
    };

    countCartPrice()
    /*var cart = [
        ["Ноутбук Супер мощный", 100000],
        ["Роутер Супер мощный", 200000],
    ];
*/

    var amout;
    function countCartPrice() {
        amout = cart1.count + cart2.count;

        /*for (var i = 0; i < cart.length; i++) {
            product = cart[i];
            amout += product[1];
        }*/
    }
    return "Общая сумма товаров в корзине: " + amout + " рублей";


}
alert(secondtask())
/*3. * Подумать над глобальными сущностями. К примеру, сущность «Продукт» в интернет-магазине актуальна не только для корзины, но и для каталога. Стремиться нужно к тому, чтобы объект «Продукт» имел единую структуру для различных модулей сайта, но в разных местах давал возможность вызывать разные методы. */

/* В голове у меня представляется всё вокруг одного конструктора. Есть объекты - товары. В зависимости от места на сайте, куда необходимо вывести товар, будет меняться информация, которую выводим. Пробегаемся с помощью for in по объекту достаём нужную информацию и собираем её на страничке. Так же было бы идеально, сделать конструктор, который будет создавать новые объекты. Мы же будем добавлять товар или менять параметры и стоимость. Вызвав одну функцию, реализовать функционал. Можно в объект защить методы - функции, которые будут собирать необходимую информацию, для необходимого места на сайте.*/